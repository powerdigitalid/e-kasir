generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model Product {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  product_name   String
  product_price  Int
  product_stock  Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now())
  transaksi_jual Transaksi_jual[]
  transaksi_beli Transaksi_beli[]
  jual           Jual[]
}

model Transaksi_jual {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String   @db.ObjectId
  quantity   Int
  total      Int
  date       DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Transaksi_beli {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String   @db.ObjectId
  quantity   Int
  total      Int
  date       DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Type {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  type_name String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  keuangan  Keuangan[]
}

model Keuangan {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  jumlah_uang Int
  pembayaran  String
  keterangan  String
  type        Type     @relation(fields: [type_id], references: [id])
  type_id     String   @db.ObjectId
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model HitungLaba {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  total_pengeluaran Int
  total_pemasukan   Int
  total_laba        Int
  date              DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
}

model Pelanggan {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  jual      Jual[]
}

model Jual {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  invove       String
  product      Product   @relation(fields: [product_id], references: [id])
  product_id   String    @db.ObjectId
  quantity     Int
  pelanggan    Pelanggan @relation(fields: [pelanggan_id], references: [id])
  pelanggan_id String    @db.ObjectId
  harga        Int
  pembayaran   Int
  sisa         Int
  keterangan   String
  date         DateTime
  total        Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  username  String   @unique(map: "User_username_key")
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
